function nii_segment4d (image, n)
%convert a 4D image with order 1,2..n,1,2..n,1,2,--n into N separate images
% image : 4D image to segment
% n : number of interleaved timepoints, e.g. echoes
%Example
% nii_segment4d('img.nii', 3); %e.g. make 3 images 1st will have volumes 1,4,7...

if ~exist('image','var') || isempty(image) %no files specified
    image = spm_select(1,'image','Select 4D volume');
end
if ~exist('n','var')
	answer = inputdlg('Scaling factor ("Number of interleaved images' ,'Settings',1,{'2'});
	n=str2num(answer{1}); %#ok<ST2NM>
end
n = round(n);
if (n < 2), error('n must be 2 or larger'); end
[p,n,x] = spm_fileparts(image);
image = fullfile(p,[n,x]); %'img.nii,1' -> 'img.nii'
hdr = spm_vol(image);
img = spm_read_vols(hdr);
nvol = numel(hdr);
h

for vol=1:nvol
    hdr.n(1)=vol;
    for z=1:nZ
        imgMod(:,:,z) = imgVol1(:,:,z)*y(z,vol);
    end;
    imgMod = imgMod + imgVol1; %shift baseline away from zero
    imgMod = imgMod + 0.1*vol; %add drift
    linearTrend = 1+ 0.1*vol;
    for yi=25:35
        for xi=10:20
            imgMod(xi,yi,:) = linearTrend;
        end
    end;
    for yi=45:55
        for xi=10:20
            imgMod(xi,yi,:) = 1;
        end
    end;
    spm_write_vol(hdr,imgMod(:, :, :, 1));
end;